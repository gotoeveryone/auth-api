basePath: /
definitions:
  entity.Activate:
    properties:
      account:
        maxLength: 20
        minLength: 8
        type: string
      newPassword:
        type: string
      password:
        type: string
    required:
    - account
    - newPassword
    - password
    type: object
  entity.Authenticate:
    properties:
      account:
        maxLength: 20
        minLength: 8
        type: string
      password:
        type: string
    required:
    - account
    - password
    type: object
  entity.Claim:
    properties:
      expire:
        type: string
      token:
        type: string
    type: object
  entity.Date:
    properties:
      time.Time:
        type: string
    type: object
  entity.Error:
    properties:
      code:
        type: integer
      message: {}
    type: object
  entity.GeneratedPassword:
    properties:
      password:
        type: string
    type: object
  entity.RegistrationUser:
    properties:
      account:
        maxLength: 20
        minLength: 8
        type: string
      birthday:
        type: string
      gender:
        enum:
        - Male
        - Female
        - Unknown
        type: string
      mailAddress:
        type: string
      name:
        maxLength: 50
        type: string
      role:
        enum:
        - Administrator
        - General
        type: string
    required:
    - account
    - birthday
    - gender
    - mailAddress
    - name
    type: object
  entity.State:
    properties:
      environment:
        type: string
      logLevel:
        type: string
      status:
        type: string
      timezone:
        type: string
    type: object
  entity.User:
    properties:
      account:
        type: string
      birthday:
        $ref: '#/definitions/entity.Date'
      gender:
        type: string
      id:
        type: integer
      mailAddress:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
  license:
    name: Kazuki Kamizuru
  title: General authentication API
  version: "1.0"
paths:
  /v1:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.State'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entity.Error'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Return application state
      tags:
      - State
  /v1/activate:
    post:
      consumes:
      - application/json
      parameters:
      - description: request data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.Activate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entity.Error'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Enable account with update password
      tags:
      - Authenticate
  /v1/auth:
    post:
      parameters:
      - description: request data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.Authenticate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Claim'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entity.Error'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Execute authentication for user
      tags:
      - Authenticate
  /v1/deauth:
    delete:
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entity.Error'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/entity.Error'
      security:
      - ApiKeyAuth: []
      summary: Execute deauthentication for user
      tags:
      - Authenticate
  /v1/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entity.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entity.Error'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/entity.Error'
      security:
      - ApiKeyAuth: []
      summary: Return authenticated user
      tags:
      - Authenticate
  /v1/refresh_token:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Claim'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entity.Error'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/entity.Error'
      security:
      - ApiKeyAuth: []
      summary: Publish refresh token for user
      tags:
      - Authenticate
  /v1/users:
    post:
      consumes:
      - application/json
      parameters:
      - description: request data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entity.RegistrationUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.GeneratedPassword'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entity.Error'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/entity.Error'
      summary: Execute registration of account
      tags:
      - Authenticate
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
